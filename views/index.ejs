<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Importa File</title>
    <link rel="stylesheet" href="/css/index.css">
</head>
<body>
     <div class="container">
        <h1 class="title">Importa File</h1>

        <div id="notification-container"></div>

        <form id="importForm" action="/upload" method="POST" enctype="multipart/form-data">
            <div class="form-group">
                <label for="service">Seleziona il servizio</label>
                <select name="service" id="service" required>
                    <option value="intesa">Intesa</option>
                    <option value="paypal">PayPal</option>
                </select>
            </div>
            <div class="form-group">
                <label for="file">Carica il file</label>
                <input type="file" name="file" id="file" required>
            </div>
            <button type="submit">Importa</button>
        </form>

        <button id="refreshButton" class="fab-button fab-left" title="Refresh">â†»</button>
        <button id="importCashButton" class="fab-button fab-right" title="Importa Cash">ðŸ’°</button>
    </div>

    <script>
        const timeout = 5000;

        // Funzione per mostrare notifiche
        function showNotification(data) {
            const notificationContainer = document.getElementById('notification-container');
            const notification = document.createElement('div');
            notification.className = `notification ${data.type}`;
            notification.innerHTML = data.text;
            notificationContainer.style.display = 'block';

            notificationContainer.innerHTML = ''; // Pulisce la precedente notifica
            notificationContainer.appendChild(notification);

            // Nascondi gradualmente la notifica dopo il timeout
            setTimeout(() => {
                notification.style.opacity = '0'; // Inizia il fade-out
            }, timeout);

            // Nascondi completamente la notifica dopo il fade-out
            setTimeout(() => {
                notification.style.display = 'none';
            }, timeout + 3000);
        }

        // Intercetta l'invio del form
        document.getElementById('importForm').addEventListener('submit', function (e) {
            e.preventDefault(); // Impedisce il comportamento di submit tradizionale

            // Crea un FormData per inviare i dati del form
            const formData = new FormData(this);
            
            // Esegui una richiesta POST
            fetch('/api/upload', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    document.getElementById('file').value = '';
                }
                return response.json(); // Risposta del server come JSON
            })
            .then(data => {
                // Mostra la notifica (successo o errore)
                showNotification(data);
            })
            .catch(error => {
                console.error('Errore nella richiesta:', error);
            })
            .finally(() => {
                console.log("Richiesta POST elaborata");
            });
        });

        // Aggiungi il comportamento al pulsante Refresh
        document.getElementById('refreshButton').addEventListener('click', function () {
            // Esegui una richiesta GET
            fetch('/api/refresh', { method: 'GET' })
            .then(response => response.json())
            .then(data => {
                // Mostra la notifica (successo o errore)
                showNotification(data);
            })
            .catch(error => {
                console.error('Errore nella richiesta GET:', error);
            })
            .finally(() => {
                console.log("Richiesta GET elaborata");
            });
        });

        document.getElementById('importCashButton').addEventListener('click', function () {
            // Esegui una richiesta GET per importare i cash
            fetch('/api/import-cash', { method: 'GET' })
                .then(response => response.json())
                .then(data => {
                    // Mostra la notifica (successo o errore)
                    showNotification(data);
                })
                .catch(error => {
                    console.error('Errore nella richiesta Import Cash:', error);
                })
                .finally(() => {
                    console.log("Richiesta Import Cash elaborata");
                });
        });
    </script>
</body>
